# A collection of test for Project 9 in the Full Stack JavaScript Techdegree


# Tests for the User Routes section of the rubric

### Get User (With Auth)
GET http://localhost:5000/api/users HTTP/1.1
Authorization: Basic joe@smith.com:joepassword

### Create User
POST http://localhost:5000/api/users HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Smith",
  "emailAddress": "john23@smith.com",
  "password": "password"
}

### Create User (Existing Email) - EXCEEDS
POST http://localhost:5000/api/users HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
  "firstName": "Joe",
  "lastName": "Smith",
  "emailAddress": "joe@smith.com",
  "password": "password"
}


# Tests for the Course Routes section of the rubric

### Get Courses
GET http://localhost:5000/api/courses HTTP/1.1

### Get Course
GET http://localhost:5000/api/courses/1 HTTP/1.1

### Create Course (Minimum Data)
POST http://localhost:5000/api/courses HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
  "title": "My new course",
  "description": "This is the course I created",
  "userId": 1
}

### Update Course (Minimum Data)
PUT http://localhost:5000/api/courses/1 HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
	"id": 1,
  "title": "Updated course!",
  "description": "The course description has been updated as well.",
  "userId": 1
}

### Delete Course (With Auth)
DELETE http://localhost:5000/api/courses/4 HTTP/1.1
Authorization: Basic joe@smith.com:joepassword

### Update Course (Not Owner) - EXCEEDS
PUT http://localhost:5000/api/courses/3 HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
	"id": 3,
  "title": "Updated course!",
  "description": "The course description has been updated as well.",
  "userId": 1
}

### Delete Course (Not Owner) - EXCEEDS
DELETE http://localhost:5000/api/courses/3 HTTP/1.1
Authorization: Basic joe@smith.com:joepassword


# Tests for the Validations section of the rubric

### Create User (Incomplete Data)
POST http://localhost:5000/api/users HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{

}

### Create Course (Incomplete Data)
POST http://localhost:5000/api/courses HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{

}

### Update Course (Incomplete Data)
PUT http://localhost:5000/api/courses/1 HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
  "title": "",
  "description": ""
}

### Create User (Invalid Email) - EXCEEDS
POST http://localhost:5000/api/users HTTP/1.1
Authorization: Basic joe@smith.com:joepassword
Content-Type: application/json

{
  "firstName": "Sam",
  "lastName": "Smith",
  "emailAddress": "sam.com",
  "password": "password"
}


# Tests for the Permissions section of the rubric

### Get User (No Auth)
GET http://localhost:5000/api/users HTTP/1.1

### Create Course (No Auth, Incomplete Data)
POST http://localhost:5000/api/courses HTTP/1.1
Content-Type: application/json

{

}

### Update Course (No Auth, Incomplete Data)
PUT http://localhost:5000/api/courses/1 HTTP/1.1
Content-Type: application/json

{
  "title": "",
  "description": ""
}

### Delete Course (No Auth)
DELETE http://localhost:5000/api/courses/1 HTTP/1.1
